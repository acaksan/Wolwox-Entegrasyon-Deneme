### ğŸš€ Wolvox-WooCommerce Entegrasyonu - AltyapÄ± ve Sunucu YÃ¶netimi StandartlarÄ±

Bu belge, **sunucu yapÄ±landÄ±rmalarÄ±nÄ±n nasÄ±l olmasÄ± gerektiÄŸini, yÃ¼k dengeleme ve Ã¶lÃ§eklendirme yÃ¶ntemlerini, gÃ¼venli eriÅŸim politikalarÄ±nÄ± ve sistem bakÄ±m sÃ¼reÃ§lerini** belirler. **Sistem her zaman gÃ¼venli, yÃ¼ksek eriÅŸilebilirlikte ve Ã¶lÃ§eklenebilir olmalÄ±dÄ±r.**

---

## ğŸ“Œ 1. Genel Sunucu YÃ¶netim KurallarÄ±
âœ” **TÃ¼m sunucular belirli bir yapÄ±landÄ±rma standardÄ±na uygun olmalÄ±dÄ±r.**
âœ” **Sunucu konfigÃ¼rasyonlarÄ± Infrastructure-as-Code (IaC) araÃ§larÄ±yla yÃ¶netilmelidir (Terraform, Ansible).**
âœ” **Otomatik yedekleme, log yÃ¶netimi ve gÃ¼ncellemeler dÃ¼zenli olarak yapÄ±lmalÄ±dÄ±r.**
âœ” **Sistem izleme ve performans Ã¶lÃ§Ã¼mÃ¼ sÃ¼rekli yapÄ±lmalÄ±dÄ±r.**
âœ” **Yetkisiz eriÅŸimler engellenmeli ve sunucu gÃ¼venliÄŸi Ã¶nceliklendirilmelidir.**

---

## ğŸ“Œ 2. Sunucu KonfigÃ¼rasyonu
âœ” **Sunucular en gÃ¼ncel iÅŸletim sistemi ve gÃ¼venlik yamalarÄ± ile gÃ¼ncel tutulmalÄ±dÄ±r.**
âœ” **SSH baÄŸlantÄ±larÄ± yalnÄ±zca belirli IP adreslerine izin verilmelidir.**
âœ” **GÃ¼venlik duvarÄ± (firewall) ile gereksiz portlar kapatÄ±lmalÄ±dÄ±r.**
âœ” **Sunucu loglarÄ± merkezi bir sistemde (Graylog, ELK) saklanmalÄ±dÄ±r.**
âœ” **Root eriÅŸimi devre dÄ±ÅŸÄ± bÄ±rakÄ±lmalÄ±, yetkilendirilmiÅŸ kullanÄ±cÄ±lar SSH anahtarlarÄ±yla baÄŸlanmalÄ±dÄ±r.**

ğŸ“Œ **Ã–rnek GÃ¼venlik DuvarÄ± AyarlarÄ± (Linux UFW)**
```bash
ufw default deny incoming
ufw default allow outgoing
ufw allow 22/tcp   # SSH baÄŸlantÄ±sÄ±
ufw allow 80/tcp   # HTTP trafik
ufw allow 443/tcp  # HTTPS trafik
ufw enable
```

ğŸ“Œ **Ã–rnek SSH Yetkilendirme:**
```bash
nano /etc/ssh/sshd_config
# PermitRootLogin no
# PasswordAuthentication no
# AllowUsers admin_user
systemctl restart sshd
```

---

## ğŸ“Œ 3. YÃ¼k Dengeleme (Load Balancing) ve Ã–lÃ§eklendirme
âœ” **YÃ¼ksek trafikli sistemlerde yÃ¼k dengeleme zorunludur.**
âœ” **Uygulama Ã¶lÃ§eklendirme iÃ§in Docker, Kubernetes veya Load Balancer kullanÄ±lmalÄ±dÄ±r.**
âœ” **Auto Scaling politikalarÄ± belirlenmeli ve kaynaklar dinamik olarak ayarlanmalÄ±dÄ±r.**
âœ” **VeritabanÄ± replikasyonu (master-slave) ile yÃ¼ksek eriÅŸilebilirlik saÄŸlanmalÄ±dÄ±r.**

ğŸ“Œ **Ã–rnek Nginx Load Balancer KonfigÃ¼rasyonu:**
```nginx
upstream backend_servers {
    server 192.168.1.10;
    server 192.168.1.11;
}
server {
    listen 80;
    location / {
        proxy_pass http://backend_servers;
    }
}
```

ğŸ“Œ **Ã–rnek Kubernetes Auto Scaling KullanÄ±mÄ±:**
```yaml
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: app-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: myapp
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
```

---

## ğŸ“Œ 4. GÃ¼venli EriÅŸim PolitikalarÄ±
âœ” **TÃ¼m sunucu eriÅŸimleri merkezi bir kimlik doÄŸrulama sistemi (LDAP, IAM) ile yÃ¶netilmelidir.**
âœ” **SSH baÄŸlantÄ±larÄ± MFA (Ã‡ok FaktÃ¶rlÃ¼ Kimlik DoÄŸrulama) ile korunmalÄ±dÄ±r.**
âœ” **YetkilendirilmemiÅŸ eriÅŸimler anÄ±nda engellenmeli ve bildirilmelidir.**
âœ” **VPN veya Ã¶zel aÄŸ (VPC) kullanÄ±lmalÄ±dÄ±r.**

ğŸ“Œ **Ã–rnek OpenVPN Kurulumu:**
```bash
apt update && apt install openvpn easy-rsa
cp -r /usr/share/easy-rsa /etc/openvpn/
cd /etc/openvpn/easy-rsa
./easyrsa init-pki
./easyrsa build-ca
./easyrsa build-server-full server nopass
./easyrsa build-client-full client1 nopass
```

ğŸ“Œ **AWS IAM KullanÄ±cÄ± EriÅŸim PolitikasÄ±:**
```json
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": "ec2:DescribeInstances",
            "Resource": "*"
        }
    ]
}
```

---

## ğŸ“Œ 5. Sistem BakÄ±mÄ± ve Ä°zleme
âœ” **TÃ¼m sistemler dÃ¼zenli olarak izlenmeli ve raporlanmalÄ±dÄ±r.**
âœ” **Prometheus ve Grafana gibi araÃ§larla performans analizi yapÄ±lmalÄ±dÄ±r.**
âœ” **Sunucu disk kullanÄ±mÄ± ve CPU yÃ¼kÃ¼ sÃ¼rekli izlenmelidir.**
âœ” **Anormal durumlar tespit edildiÄŸinde otomatik uyarÄ± sistemleri Ã§alÄ±ÅŸtÄ±rÄ±lmalÄ±dÄ±r.**
âœ” **Yedekleme politikalarÄ± uygulanmalÄ± ve test edilmelidir.**

ğŸ“Œ **Ã–rnek Prometheus Node Exporter KullanÄ±mÄ±:**
```bash
wget https://github.com/prometheus/node_exporter/releases/download/v1.3.1/node_exporter-1.3.1.linux-amd64.tar.gz
tar xvfz node_exporter-*.linux-amd64.tar.gz
cd node_exporter-1.3.1.linux-amd64
./node_exporter
```

ğŸ“Œ **Ã–rnek Log Ä°zleme (Graylog):**
```yaml
input:
  gelf:
    port: 12201
    bind_address: 0.0.0.0
    tls_cert_file: /etc/graylog/cert.pem
    tls_key_file: /etc/graylog/key.pem
```

---

Bu belge **katÄ± kurallar iÃ§ermektedir** ve **bu kurallara uyulmadan altyapÄ± ve sunucu yÃ¶netimi yapÄ±lamaz.** ğŸš€

